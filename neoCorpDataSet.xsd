<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="neoCorpDataSet" targetNamespace="http://tempuri.org/neoCorpDataSet.xsd" xmlns:mstns="http://tempuri.org/neoCorpDataSet.xsd" xmlns="http://tempuri.org/neoCorpDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="neoCorpConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="neoCorpConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.lab3_dataset.Properties.Settings.GlobalReference.Default.neoCorpConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="corpusTableAdapter" GeneratorDataComponentClassName="corpusTableAdapter" Name="corpus" UserDataComponentName="corpusTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="neoCorpConnectionString (Settings)" DbObjectName="neoCorp.dbo.corpus" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[corpus] WHERE (([ID_corp] = @Original_ID_corp) AND ([title] = @Original_title) AND ([speciality] = @Original_speciality))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_corp" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_corp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_speciality" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="speciality" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[corpus] ([title], [speciality]) VALUES (@title, @speciality);
SELECT ID_corp, title, speciality FROM corpus WHERE (ID_corp = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@speciality" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="speciality" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_corp, title, speciality FROM dbo.corpus</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[corpus] SET [title] = @title, [speciality] = @speciality WHERE (([ID_corp] = @Original_ID_corp) AND ([title] = @Original_title) AND ([speciality] = @Original_speciality));
SELECT ID_corp, title, speciality FROM corpus WHERE (ID_corp = @ID_corp)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@speciality" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="speciality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_corp" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_corp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_speciality" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="speciality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_corp" ColumnName="ID_corp" DataSourceName="neoCorp.dbo.corpus" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_corp" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_corp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_corp" DataSetColumn="ID_corp" />
              <Mapping SourceColumn="title" DataSetColumn="title" />
              <Mapping SourceColumn="speciality" DataSetColumn="speciality" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="staffTableAdapter" GeneratorDataComponentClassName="staffTableAdapter" Name="staff" UserDataComponentName="staffTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="neoCorpConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT staff.ID_staff, staff.surname, staff.firstname, staff.middlename, staff.email, staff.post_ID, staffpost.postname, staffpost.corp_ID, corpus.title, corpus.speciality
FROM     staff 
INNER JOIN staffpost ON staff.post_ID = staffpost.ID_post 
INNER JOIN corpus ON staffpost.corp_ID = corpus.ID_corp</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_staff" DataSetColumn="ID_staff" />
              <Mapping SourceColumn="surname" DataSetColumn="surname" />
              <Mapping SourceColumn="firstname" DataSetColumn="firstname" />
              <Mapping SourceColumn="middlename" DataSetColumn="middlename" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
              <Mapping SourceColumn="post_ID" DataSetColumn="post_ID" />
              <Mapping SourceColumn="postname" DataSetColumn="postname" />
              <Mapping SourceColumn="corp_ID" DataSetColumn="corp_ID" />
              <Mapping SourceColumn="title" DataSetColumn="title" />
              <Mapping SourceColumn="speciality" DataSetColumn="speciality" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="neoCorpConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetFullData" GetMethodModifier="Public" GetMethodName="GetFullData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetFullData" UserSourceName="GetFullData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT staff.ID_staff, staff.surname, staff.firstname, staff.middlename, staff.email, staff.post_ID, staffpost.postname, staffpost.corp_ID, corpus.title, corpus.speciality
FROM     staff 
INNER JOIN staffpost ON staff.post_ID = staffpost.ID_post 
INNER JOIN corpus ON staffpost.corp_ID = corpus.ID_corp</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="staffpostTableAdapter" GeneratorDataComponentClassName="staffpostTableAdapter" Name="staffpost" UserDataComponentName="staffpostTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="neoCorpConnectionString (Settings)" DbObjectName="neoCorp.dbo.staffpost" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[staffpost] WHERE (([ID_post] = @Original_ID_post) AND ([postname] = @Original_postname) AND ([corp_ID] = @Original_corp_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_post" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_postname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="postname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_corp_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="corp_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[staffpost] ([postname], [corp_ID]) VALUES (@postname, @corp_ID);
SELECT ID_post, postname, corp_ID FROM staffpost WHERE (ID_post = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@postname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="postname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@corp_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="corp_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_post, postname, corp_ID FROM dbo.staffpost</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[staffpost] SET [postname] = @postname, [corp_ID] = @corp_ID WHERE (([ID_post] = @Original_ID_post) AND ([postname] = @Original_postname) AND ([corp_ID] = @Original_corp_ID));
SELECT ID_post, postname, corp_ID FROM staffpost WHERE (ID_post = @ID_post)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@postname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="postname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@corp_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="corp_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_post" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_postname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="postname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_corp_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="corp_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_post" ColumnName="ID_post" DataSourceName="neoCorp.dbo.staffpost" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_post" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_post" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_post" DataSetColumn="ID_post" />
              <Mapping SourceColumn="postname" DataSetColumn="postname" />
              <Mapping SourceColumn="corp_ID" DataSetColumn="corp_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="neoCorpDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="neoCorpDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="neoCorpDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="corpus" msprop:Generator_RowClassName="corpusRow" msprop:Generator_RowEvHandlerName="corpusRowChangeEventHandler" msprop:Generator_RowDeletedName="corpusRowDeleted" msprop:Generator_RowDeletingName="corpusRowDeleting" msprop:Generator_RowEvArgName="corpusRowChangeEvent" msprop:Generator_TablePropName="corpus" msprop:Generator_RowChangedName="corpusRowChanged" msprop:Generator_UserTableName="corpus" msprop:Generator_RowChangingName="corpusRowChanging" msprop:Generator_TableClassName="corpusDataTable" msprop:Generator_TableVarName="tablecorpus">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_corp" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID_corp" msprop:Generator_ColumnPropNameInTable="ID_corpColumn" msprop:Generator_ColumnPropNameInRow="ID_corp" msprop:Generator_ColumnVarNameInTable="columnID_corp" type="xs:int" />
              <xs:element name="title" msprop:Generator_UserColumnName="title" msprop:Generator_ColumnPropNameInTable="titleColumn" msprop:Generator_ColumnPropNameInRow="title" msprop:Generator_ColumnVarNameInTable="columntitle">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="60" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="speciality" msprop:Generator_UserColumnName="speciality" msprop:Generator_ColumnPropNameInTable="specialityColumn" msprop:Generator_ColumnPropNameInRow="speciality" msprop:Generator_ColumnVarNameInTable="columnspeciality">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="60" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="staff" msprop:Generator_RowClassName="staffRow" msprop:Generator_RowEvHandlerName="staffRowChangeEventHandler" msprop:Generator_RowDeletedName="staffRowDeleted" msprop:Generator_RowDeletingName="staffRowDeleting" msprop:Generator_RowEvArgName="staffRowChangeEvent" msprop:Generator_TablePropName="staff" msprop:Generator_RowChangedName="staffRowChanged" msprop:Generator_UserTableName="staff" msprop:Generator_RowChangingName="staffRowChanging" msprop:Generator_TableClassName="staffDataTable" msprop:Generator_TableVarName="tablestaff">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_staff" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID_staff" msprop:Generator_ColumnPropNameInTable="ID_staffColumn" msprop:Generator_ColumnPropNameInRow="ID_staff" msprop:Generator_ColumnVarNameInTable="columnID_staff" type="xs:int" />
              <xs:element name="surname" msprop:Generator_UserColumnName="surname" msprop:Generator_ColumnPropNameInTable="surnameColumn" msprop:Generator_ColumnPropNameInRow="surname" msprop:Generator_ColumnVarNameInTable="columnsurname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="firstname" msprop:Generator_UserColumnName="firstname" msprop:Generator_ColumnPropNameInTable="firstnameColumn" msprop:Generator_ColumnPropNameInRow="firstname" msprop:Generator_ColumnVarNameInTable="columnfirstname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="middlename" msprop:Generator_UserColumnName="middlename" msprop:Generator_ColumnPropNameInTable="middlenameColumn" msprop:Generator_ColumnPropNameInRow="middlename" msprop:Generator_ColumnVarNameInTable="columnmiddlename" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="email" msprop:Generator_UserColumnName="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnVarNameInTable="columnemail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="post_ID" msprop:Generator_UserColumnName="post_ID" msprop:Generator_ColumnPropNameInTable="post_IDColumn" msprop:Generator_ColumnPropNameInRow="post_ID" msprop:Generator_ColumnVarNameInTable="columnpost_ID" type="xs:int" />
              <xs:element name="postname" msprop:Generator_ColumnPropNameInRow="postname" msprop:Generator_ColumnPropNameInTable="postnameColumn" msprop:Generator_ColumnVarNameInTable="columnpostname" msprop:Generator_UserColumnName="postname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="corp_ID" msprop:Generator_ColumnPropNameInRow="corp_ID" msprop:Generator_ColumnPropNameInTable="corp_IDColumn" msprop:Generator_ColumnVarNameInTable="columncorp_ID" msprop:Generator_UserColumnName="corp_ID" type="xs:int" />
              <xs:element name="title" msprop:Generator_ColumnPropNameInRow="title" msprop:Generator_ColumnPropNameInTable="titleColumn" msprop:Generator_ColumnVarNameInTable="columntitle" msprop:Generator_UserColumnName="title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="60" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="speciality" msprop:Generator_ColumnPropNameInRow="speciality" msprop:Generator_ColumnPropNameInTable="specialityColumn" msprop:Generator_ColumnVarNameInTable="columnspeciality" msprop:Generator_UserColumnName="speciality">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="60" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="staffpost" msprop:Generator_RowClassName="staffpostRow" msprop:Generator_RowEvHandlerName="staffpostRowChangeEventHandler" msprop:Generator_RowDeletedName="staffpostRowDeleted" msprop:Generator_RowDeletingName="staffpostRowDeleting" msprop:Generator_RowEvArgName="staffpostRowChangeEvent" msprop:Generator_TablePropName="staffpost" msprop:Generator_RowChangedName="staffpostRowChanged" msprop:Generator_UserTableName="staffpost" msprop:Generator_RowChangingName="staffpostRowChanging" msprop:Generator_TableClassName="staffpostDataTable" msprop:Generator_TableVarName="tablestaffpost">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_post" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID_post" msprop:Generator_ColumnPropNameInTable="ID_postColumn" msprop:Generator_ColumnPropNameInRow="ID_post" msprop:Generator_ColumnVarNameInTable="columnID_post" type="xs:int" />
              <xs:element name="postname" msprop:Generator_UserColumnName="postname" msprop:Generator_ColumnPropNameInTable="postnameColumn" msprop:Generator_ColumnPropNameInRow="postname" msprop:Generator_ColumnVarNameInTable="columnpostname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="corp_ID" msprop:Generator_UserColumnName="corp_ID" msprop:Generator_ColumnPropNameInTable="corp_IDColumn" msprop:Generator_ColumnPropNameInRow="corp_ID" msprop:Generator_ColumnVarNameInTable="columncorp_ID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:corpus" />
      <xs:field xpath="mstns:ID_corp" />
    </xs:unique>
    <xs:unique name="staff_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:staff" />
      <xs:field xpath="mstns:ID_staff" />
    </xs:unique>
    <xs:unique name="staffpost_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:staffpost" />
      <xs:field xpath="mstns:ID_post" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__staff__post_ID__3D5E1FD2" msdata:parent="staffpost" msdata:child="staff" msdata:parentkey="ID_post" msdata:childkey="post_ID" msprop:Generator_UserParentTable="staffpost" msprop:Generator_UserChildTable="staff" msprop:Generator_RelationVarName="relationFK__staff__post_ID__3D5E1FD2" msprop:Generator_ChildPropName="GetstaffRows" msprop:Generator_ParentPropName="staffpostRow" msprop:Generator_UserRelationName="FK__staff__post_ID__3D5E1FD2" />
      <msdata:Relationship name="FK__staffpost__corp___398D8EEE" msdata:parent="corpus" msdata:child="staffpost" msdata:parentkey="ID_corp" msdata:childkey="corp_ID" msprop:Generator_UserParentTable="corpus" msprop:Generator_UserChildTable="staffpost" msprop:Generator_RelationVarName="relationFK__staffpost__corp___398D8EEE" msprop:Generator_ChildPropName="GetstaffpostRows" msprop:Generator_UserRelationName="FK__staffpost__corp___398D8EEE" msprop:Generator_ParentPropName="corpusRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>